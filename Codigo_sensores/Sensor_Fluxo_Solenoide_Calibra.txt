// definir porta de leitura do sensor de Vazao
const int portaVazao = GPIO_NUM_35;
static void atualizaVazao();
volatile int pulsos_vazao = 0;
float vazao = 0,media=0,x_litros=1,tempo=0;
int i=0;
// interrupção
void IRAM_ATTR gpio_isr_handler_up(void* arg)
{
  pulsos_vazao++;
  portYIELD_FROM_ISR();
}
 
/*
Inicializa sensor de vazão com interrupção na subida de um pulso
 */
void inicia_rele()
{
   gpio_set_direction(GPIO_NUM_5, GPIO_MODE_OUTPUT);  
   digitalWrite(GPIO_NUM_5, LOW);   
}

 
void iniciaVazao(gpio_num_t Port){
  gpio_set_direction(Port, GPIO_MODE_INPUT);
  gpio_set_intr_type(Port, GPIO_INTR_NEGEDGE);
  gpio_set_pull_mode(Port, GPIO_PULLUP_ONLY);
  gpio_intr_enable(Port);
  gpio_install_isr_service(0);
  gpio_isr_handler_add(Port, gpio_isr_handler_up, (void*) Port);
}
 
void setup() {
  Serial.begin(115200);
  inicia_rele();
  Serial.println("\nAguardando 10 seg para iniciar a solenoide eo sensor de fluxo:");
  delay(10000);
  iniciaVazao((gpio_num_t) portaVazao);
  digitalWrite(GPIO_NUM_5, HIGH);
  calibra();
  digitalWrite(GPIO_NUM_5, LOW);
  delay(10000);
  Serial.println("\nAguardando 10 seg para ligar o solenoide:");
 // enche_recipiente();
  Serial.println("Processo Finalizado:");
}

void enche_recipiente()
{
 tempo=((x_litros/media)*1000); //tempo necessario para encher recipiente com x_litros em mili segundos
 Serial.println("\nDevemos aguardar:");

 Serial.print(tempo);
 digitalWrite(GPIO_NUM_34, HIGH);
 delay(tempo);
 digitalWrite(GPIO_NUM_34, LOW); 
}

 
void calibra() {
       while(1)
       {   
            pulsos_vazao = 0; 
            sei();
            delay(1000);
            cli();
            
            vazao = pulsos_vazao/5.5;
            media = media+vazao;
            i++;
            Serial.println("Leitura do Sensor de Vazao:");
            Serial.println(vazao);
          
            if (i == 60)
            {
              media = media / 3600;                    //faz a média retornando em Litros por Segundo
              Serial.print("\nMedia por minuto = "); //Imprime a frase Media por minuto =
              Serial.print(media);                   //Imprime o valor da media
              Serial.println(" L/min - ");           //Imprime L/min
              i = 0;                                 //Zera a variável i para uma nova contagem
              break;
            }
        }
}


void loop()
{
}
